html
  head
    title= title
    link(rel='icon', href='/images/openservicebrokerapi-logo.png')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css')
    style
      include style.css
  body
    -
        function syntaxHighlight(json) {
            if (typeof json != 'string') {
                json = JSON.stringify(json, undefined, 2);
            }
            json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
            return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
                var cls = 'number';
                if (/^"/.test(match)) {
                    if (/:$/.test(match)) {
                        cls = 'key';
                    } else {
                        cls = 'string';
                    }
                } else if (/true|false/.test(match)) {
                    cls = 'boolean';
                } else if (/null/.test(match)) {
                    cls = 'null';
                }
                return '<span class="' + cls + '">' + match + '</span>';
            });
        }
    .container
      .header.clearfix(style={'margin-top': '15px'})
        div.col-12
          img.spin(src='../images/openservicebrokerapi-logo.png', alt='Open Service Broker API Logo')
          img(src='../images/openservicebrokerapi-text.png', alt='Open Service Broker API')
        div.col-12(style={'padding-top': '18px'})
          span.float-right
            button.btn.btn-danger(style={'margin-right': '5px'}, onclick='cleanData()') Clean
            button.btn.btn-secondary(onclick='refreshPage()') Refresh
      div.row.mb-2
        div.col(style={'margin-top': '10px'})
          div.card
            h6.card-header
              a.text-primary(data-toggle='collapse', href='#catalog') Edit catalog
            div#catalog.card-body.collapse(style={'padding': '0px'})
              textarea(style={'background': '#333', 'color': '#fff', 'font': '14px "Courier New";', 'line-height': '1.6em', 'padding': '15px', 'border': 'none', 'height': '60%', 'width': '100%' }) #{JSON.stringify(catalog, null, 2)}
              button.btn.btn-default(style={'width': '100%', 'border-radius': '0px', 'color': 'white', 'background-color': '#f19600'}, onclick='updateCatalog()') Save
      div.row.mb-2
        div.col-12.col-sm-6
          div.card
            h6.card-header
              a.text-info(data-toggle='collapse', href='#request') Last Request
            div#request.card-body.collapse
              pre(style={'background': 'none', 'border': 'none', 'height': '400px'}) !{syntaxHighlight(lastRequest)}
        div.col-12.col-sm-6
          div.card
            h6.card-header
              a.text-info(data-toggle='collapse', href='#response') Last Response
            div#response.card-body.collapse
              pre(style={'background': 'none', 'border': 'none', 'height': '400px'}) !{syntaxHighlight(lastResponse)}
      - let numServices = Object.keys(serviceInstances).length
      if numServices > 0
        div.row.mb-2
            - var a = 0
            each serviceData, serviceKey in serviceInstances
              div.col-12.col-sm-6.mb-2
                div.card
                  div.card-header(class=`${serviceData.parameters.rainbow ? "rainbow" : "instance"}`)
                    if serviceData.parameters.name
                      h5 #{serviceData.parameters.name}
                    else
                      h5 #{serviceKey}
                  div.card-body
                    sub Created #{serviceData.created}
                    if serviceData.last_update
                      sub Last Update #{serviceData.last_update}
                    p
                      -
                        var serviceDataToDisplay = JSON.parse(JSON.stringify(serviceData))
                        JSON.stringify(serviceDataToDisplay)
                        delete serviceDataToDisplay['created']
                        delete serviceDataToDisplay['last_updated']
                      pre(style={'background': 'none', 'border': 'none'}) !{syntaxHighlight(serviceDataToDisplay)}
                      div(style={'float': 'right', 'height': '50px'})
                        if serviceDataToDisplay.context != null && serviceDataToDisplay.context.platform == 'kubernetes'
                          img(src='../images/kubernetes.png', alt='Kubernetes')
                        else
                          img(src='../images/cloudfoundry.png', alt='Cloud Foundry')
                - a+=1
              if (a % 2) == 0
                div.clearfix
      else
        div.col-12(style={'margin-top': '50px', 'text-align': 'center'})
          p No service instances have been provisioned

    include githubcorners.html

    script(src='https://code.jquery.com/jquery-3.2.1.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js')
    script
      include helpers.js
